version: '3.8'
services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=kafka
      - ZOO_SERVER_PASSWORDS=kafka_password
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - kafka_network
    restart: always

  kafka1:
    image: 'docker.io/bitnami/kafka:latest'
    container_name: kafka1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      # Внешний листенер для клиентов
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # Безопасность
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=PLAIN
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CLIENT_USERS=user1
      - KAFKA_CLIENT_PASSWORDS=password1
      # SSL настройки
      - KAFKA_CFG_SSL_KEYSTORE_LOCATION=/opt/bitnami/kafka/config/certs/kafka.keystore.jks
      - KAFKA_CFG_SSL_KEYSTORE_PASSWORD=kafka123
      - KAFKA_CFG_SSL_KEY_PASSWORD=kafka123
      - KAFKA_CFG_SSL_TRUSTSTORE_LOCATION=/opt/bitnami/kafka/config/certs/kafka.truststore.jks
      - KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD=kafka123
      # Настройки производительности
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=2
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_HEAP_OPTS=-Xmx4G -Xms4G
      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      - KAFKA_CFG_MESSAGE_MAX_BYTES=31457280
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=31457280
      # Мониторинг
      - KAFKA_CFG_METRIC_REPORTERS=org.apache.kafka.common.metrics.JmxReporter
    volumes:
      - ./certs:/opt/bitnami/kafka/config/certs
    networks:
      - kafka_network
    depends_on:
      - zookeeper

  kafka2:
    image: 'docker.io/bitnami/kafka:latest'
    container_name: kafka2
    ports:
      - "9094:9094"
      - "9095:9095"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=2
      # Внешний листенер для клиентов
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9094,EXTERNAL://0.0.0.0:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka2:9094,EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # Безопасность
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=PLAIN
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CLIENT_USERS=user1
      - KAFKA_CLIENT_PASSWORDS=password1
      # SSL настройки
      - KAFKA_CFG_SSL_KEYSTORE_LOCATION=/opt/bitnami/kafka/config/certs/kafka.keystore.jks
      - KAFKA_CFG_SSL_KEYSTORE_PASSWORD=kafka123
      - KAFKA_CFG_SSL_KEY_PASSWORD=kafka123
      - KAFKA_CFG_SSL_TRUSTSTORE_LOCATION=/opt/bitnami/kafka/config/certs/kafka.truststore.jks
      - KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD=kafka123
      # Настройки производительности
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=2
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_HEAP_OPTS=-Xmx4G -Xms4G
      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      - KAFKA_CFG_MESSAGE_MAX_BYTES=31457280
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=31457280
      # Мониторинг
      - KAFKA_CFG_METRIC_REPORTERS=org.apache.kafka.common.metrics.JmxReporter
    volumes:
      - ./certs:/opt/bitnami/kafka/config/certs
    networks:
      - kafka_network
    depends_on:
      - zookeeper

  redis:
    image: 'redis:latest'
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  
  prometheus:
    image: 'docker.io/bitnami/prometheus:latest'
    container_name: prometheus
    ports: 
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml:ro
      - prometheus_data:/opt/bitnami/prometheus/data
    command:
      - '--config.file=/opt/bitnami/prometheus/conf/prometheus.yml'
      - '--storage.tsdb.path=/opt/bitnami/prometheus/data'
      - '--web.console.libraries=/opt/bitnami/prometheus/conf/console_libraries'
      - '--web.console.templates=/opt/bitnami/prometheus/conf/consoles'
    restart: unless-stopped
  
  grafana:
    image: 'docker.io/bitnami/grafana:latest'
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=12345
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/opt/bitnami/grafana/data
      - ./grafana/provisioning:/opt/bitnami/grafana/conf/provisioning
    restart: unless-stopped

networks:
  kafka_network:
    driver: bridge

volumes:
  zookeeper_data:
  redis_data:
  prometheus_data:
  grafana_data:
